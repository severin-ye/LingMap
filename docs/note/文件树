.
├── FINAL_SYSTEM_REPORT.md      # 系统最终报告，总结项目成果、指标和完成情况
├── README.md                   # 项目说明文档，包含项目概述、安装指南和使用方法
├── 6_api_gateway               # API网关模块，提供统一的HTTP API接口
│   └── main.py                 # API网关主文件，处理外部请求和各模块间通信
├── 4_causal_linking            # 因果关系链接模块，识别事件之间的因果关系
│   ├── app.py                  # 模块入口文件，提供因果链接服务接口
│   ├── controller              # 控制器目录，处理因果链接相关请求
│   │   └── linker_controller.py  # 因果链接控制器，管理链接请求的处理流程
│   ├── di                      # 依赖注入目录
│   │   └── provider.py         # 依赖注入提供者，管理服务依赖
│   ├── domain                  # 领域模型目录
│   │   └── base_linker.py      # 链接器基类定义
│   ├── repository              # 数据仓库目录（用于存储或访问数据）
│   └── service                 # 服务目录，具体实现因果链接的业务逻辑
│       ├── README.md           # 因果链接服务说明文档
│       ├── base_causal_linker.py  # 基础因果链接实现
│       ├── candidate_generator.py # 因果候选对生成器，生成可能的因果关系候选
│       ├── graph_filter.py     # 图过滤器，用于过滤和优化因果图
│       ├── pair_analyzer.py    # 事件对分析器，分析事件对之间的因果关系
│       ├── unified_linker_service.py  # 统一链接服务，整合因果链接的各个步骤
│       └── unified_linker_service.py.bak  # 统一链接服务的备份文件
├── common                      # 公共组件目录，包含各模块共用的工具和接口
│   ├── config                  # 配置文件目录
│   │   ├── config.json         # 系统主配置文件
│   │   ├── parallel_config.json  # 并行处理配置文件
│   │   ├── prompt_causal_linking.json  # 因果链接LLM提示词配置
│   │   ├── prompt_event_extraction.json  # 事件提取LLM提示词配置
│   │   └── prompt_hallucination_refine.json  # 幻觉修复LLM提示词配置
│   ├── interfaces              # 接口定义目录
│   │   ├── extractor.py        # 事件提取器接口
│   │   ├── graph_renderer.py   # 图形渲染器接口
│   │   ├── linker.py           # 因果链接器接口
│   │   └── refiner.py          # 幻觉修复器接口
│   ├── models                  # 数据模型目录
│   │   ├── causal_edge.py      # 因果边模型，定义事件间的因果关系
│   │   ├── chapter.py          # 章节模型，定义小说章节的数据结构
│   │   ├── event.py            # 事件模型，定义事件的数据结构
│   │   └── treasure.py         # 宝物模型，定义宝物的数据结构
│   └── utils                   # 工具函数目录
│       ├── config_writer.py    # 配置写入工具
│       ├── enhanced_logger.py  # 增强日志记录器
│       ├── json_loader.py      # JSON加载工具
│       ├── parallel_config.py  # 并行配置工具
│       ├── path_utils.py       # 路径处理工具
│       ├── text_splitter.py    # 文本分割工具
│       ├── thread_monitor.py   # 线程监控工具
│       └── unified_id_processor.py  # 统一ID处理器
├── debug                       # 调试文件目录
│   ├── api_response.json       # API响应调试数据
│   ├── extracted_events.json   # 提取的事件调试数据
│   ├── extracted_events_test.json  # 测试事件调试数据
│   └── optimized_vs_original.json  # 优化前后对比数据
├── docs                        # 文档目录
│   ├── README.md               # 项目说明文档
│   ├── log_doc                 # 项目日志和文档目录
│   │   ├── FINAL_SYSTEM_REPORT.md  # 系统最终报告
│   │   ├── _要处理的问题.md      # 待处理问题记录
│   │   ├── tree_compare.md     # 文件树比较文档
│   │   ├── 代码冗余合并优化报告.md  # 代码冗余合并优化的报告
│   │   ├── 代码合并优化完成报告.md  # 代码合并优化完成报告
│   │   ├── 修复计划.md          # 系统修复计划
│   │   ├── 因果图逻辑改造.md     # 因果图逻辑改造文档
│   │   ├── 并行处理优化总结报告.md  # 并行处理优化总结报告
│   │   ├── 并行处理优化报告.md   # 并行处理优化详细报告
│   │   ├── 测试修复完成报告.md   # 测试修复完成情况报告
│   │   └── 脚本整合优化报告.md   # 脚本整合优化报告
│   ├── note                    # 笔记目录
│   │   ├── 文件树              # 当前文件(项目文件树文档)
│   │   └── 要处理的问题.md      # 待处理问题记录
│   ├── 代码结构设计.md          # 描述代码结构和架构设计思路
│   ├── 开发方案.md             # 项目开发方案和计划
│   ├── 理论支持.md             # 项目的理论基础和研究背景
│   └── 项目逻辑设计.md         # 详细描述项目的总体设计和逻辑流程
├── 2_event_extraction          # 事件提取模块，从文本中抽取事件信息
│   ├── app.py                  # 模块入口文件
│   ├── controller              # 控制器目录
│   │   └── extractor_controller.py  # 事件提取控制器
│   ├── di                      # 依赖注入目录
│   │   └── provider.py         # 依赖注入提供者
│   ├── domain                  # 领域模型目录
│   │   └── base_extractor.py   # 提取器基类
│   ├── repository              # 数据仓库目录
│   │   └── llm_client.py       # LLM客户端，负责与AI模型通信
│   └── service                 # 服务目录
│       └── event_extractor.py  # 事件提取器实现
├── 5_graph_builder             # 图谱构建模块，将因果关系转换为可视化图谱
│   ├── app.py                  # 模块入口文件
│   ├── controller              # 控制器目录
│   │   └── graph_controller.py # 图谱控制器，处理图谱生成请求
│   ├── domain                  # 领域模型目录
│   │   └── base_renderer.py    # 渲染器基类
│   ├── service                 # 服务目录
│   │   └── mermaid_renderer.py # Mermaid格式图表渲染服务
│   └── utils                   # 工具函数目录
│       └── color_map.py        # 色彩映射工具，为节点和边分配颜色
├── 3_hallucination_refine      # 幻觉修复模块，检测和修复AI提取的幻觉
│   ├── app.py                  # 模块入口文件
│   ├── controller              # 控制器目录
│   │   └── har_controller.py   # 幻觉修复控制器
│   ├── di                      # 依赖注入目录
│   │   └── provider.py         # 依赖注入提供者
│   ├── domain                  # 领域模型目录
│   │   └── base_refiner.py     # 修复器基类
│   ├── repository              # 数据仓库目录
│   └── service                 # 服务目录
│       └── har_service.py      # 幻觉修复服务实现
# 以下部分已移动到docs/log_doc目录中
├── main.py                     # 系统主入口文件，包含命令行接口和核心流程控制
├── novel                       # 小说文本目录
│   ├── 1.txt                   # 小说章节文件1
│   ├── 2.txt                   # 小说章节文件2
│   └── test.txt                # 测试用小说文本
├── output                      # 输出结果目录
├── pytest.ini                 # pytest测试框架配置文件
├── reports                     # 报告目录
│   ├── parallel_config_report_20250611_001707.md  # 并行配置报告
│   ├── parallel_config_report_20250611_001915.md  # 并行配置报告
│   ├── parallel_config_report_20250611_002013.md  # 并行配置报告
│   └── parallel_config_report_20250611_215755.md  # 并行配置报告
├── requirements.txt            # 项目依赖库清单
├── scripts                     # 实用脚本目录
│   ├── check_env.py            # 环境检查脚本
│   ├── fix_ids.py              # ID修复脚本
│   ├── generate_test_optimization_report.py  # 测试优化报告生成器
│   ├── refactor_demo.py        # 重构演示脚本
│   ├── run_demo.py             # 运行演示脚本
│   └── unified_parallel_tool.py  # 统一并行工具脚本
├── temp                        # 临时文件目录
│   ├── duplicate_events_test.json  # 重复事件测试数据
│   ├── fixed_events_test.json  # 修复后的事件测试数据
│   └── fixed_ids.json          # 修复后的ID数据
├── tests                       # 测试目录（原结构，保留用于参考）
│   ├── PROJECT_COMPLETION_SUMMARY.md  # 项目完成摘要
│   ├── README.md               # 测试说明文档
│   ├── api_tests               # API测试目录（已合并到tests_new）
│   ├── causal_linking_tests    # 因果链接测试目录（已合并到tests_new）
│   ├── event_extraction_tests  # 事件提取测试目录（已合并到tests_new）
│   ├── integration_tests       # 集成测试目录（已合并到tests_new）
│   ├── run_all_tests.new.py    # 新版运行所有测试脚本
│   ├── run_all_tests.py        # 运行所有测试脚本
│   ├── stage_1                 # 第1阶段测试（接口与模型）
│   ├── stage_2                 # 第2阶段测试（文本摄取与事件提取）
│   ├── stage_3                 # 第3阶段测试（幻觉修复测试）
│   ├── stage_4                 # 第4阶段测试（因果关系链接测试）
│   ├── stage_5                 # 第5阶段测试（图形构建测试）
│   ├── stage_6                 # 第6阶段测试（API网关和端到端集成测试）
│   └── utils_tests             # 工具测试目录
├── tests_new                   # 新的优化测试结构⭐
│   ├── README.md               # 新测试结构说明文档
│   ├── run_tests.py            # 统一测试运行器
│   ├── unit/                   # 单元测试目录
│   │   └── test_models.py      # 数据模型单元测试（13个测试用例）
│   ├── integration/            # 集成测试目录
│   │   ├── test_api_integration.py     # 统一API集成测试（合并5个文件）
│   │   ├── test_event_extraction.py   # 统一事件抽取测试（合并2个文件）
│   │   └── test_causal_linking.py     # 统一因果链接测试（合并4个文件）
│   ├── e2e/                    # 端到端测试目录
│   │   └── test_complete_pipeline.py  # 完整流程测试（合并3个文件）
│   └── utils/                  # 工具测试目录
│       └── test_common_utils.py       # 通用工具测试
├── 1_text_ingestion           # 文本摄取模块，负责读取和处理原始文本
│   ├── app.py                 # 模块入口文件
│   └── chapter_loader.py      # 章节加载器，处理小说章节的加载和预处理
├── tree                       # 文件树生成工具
